stages: [docker-image-build, push, deploy]

docker-image-build:
  stage: docker-image-build
  tags: [docker]
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/mini-qr"
    TAG: "$CI_COMMIT_SHORT_SHA"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - |
      docker build \
        --build-arg BASE_PATH="/" \
        --build-arg VITE_HIDE_CREDITS=true \
        --build-arg VITE_DEFAULT_PRESET="i4624" \
        --build-arg VITE_DEFAULT_DATA_TO_ENCODE="https://i4624.info" \
        --build-arg VITE_QR_CODE_PRESETS='[{"name":"i4624","ecc":"M","margin":16,"color":"#000"}]' \
        -t "$IMAGE_NAME:$TAG" -t "$IMAGE_NAME:latest" .
    - docker images | head -n 10

docker-push:
  stage: push
  tags: [docker]
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/mini-qr"
    TAG: "$CI_COMMIT_SHORT_SHA"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    - docker push "$IMAGE_NAME:$TAG"
    - docker push "$IMAGE_NAME:latest"

docker-deploy:
  stage: deploy
  tags: [docker]
  needs: ["docker-push"]
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/mini-qr"
  before_script:
    - which ssh || (sudo apt-get update && sudo apt-get install -y openssh-client)
    - mkdir -p ~/.ssh
    # 🔽 Base64로 저장된 SSH_KEY_B64를 파일로 복구 (리눅스/알파인/우분투 호환)
    - echo "$SSH_KEY_B64" | base64 -d > ~/.ssh/id_rsa || echo "$SSH_KEY_B64" | base64 --decode > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    # known_hosts 등록 (호스트키 프롬프트 방지)
    - ssh-keyscan -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts
  script: |
    ssh -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" "
      set -e
      sudo mkdir -p '${DEPLOY_DIR:-/opt/mini-qr}'
      sudo chown -R \$(id -u):\$(id -g) '${DEPLOY_DIR:-/opt/mini-qr}'
      cat > '${DEPLOY_DIR:-/opt/mini-qr}/docker-compose.yml' <<'EOF'
      services:
        miniqr:
          image: ${IMAGE_NAME}:latest
          container_name: miniqr
          ports:
            - '${PUBLISH_PORT:-8081}:80'
          restart: unless-stopped
      EOF
      echo '$CI_REGISTRY_PASSWORD' | docker login -u '$CI_REGISTRY_USER' '$CI_REGISTRY' --password-stdin
      docker compose -f '${DEPLOY_DIR:-/opt/mini-qr}/docker-compose.yml' pull
      docker compose -f '${DEPLOY_DIR:-/opt/mini-qr}/docker-compose.yml' up -d
      docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}' | sed -n '1,5p'
    "
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
